{"version":3,"sources":["lib/palette.js","common/Header.js","common/Footer.js","components/Movie.js","components/DropdownComponent.js","components/Conditions.js","GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["palette","basicColor","strongColor","wrapperColor","backgroundColor","NewRankColor","OldRankColor","HeaderWrapper","styled","div","HeaderContents","span","Header","FooterWrapper","FooterContents","ContentsTop","ContentsBottom","ContentsBlock","TextBlock","p","Footer","MovieBlock","props","rankOldAndNew","color","Movie","id","title","openDt","rank","audiAcc","toString","replace","className","HideItemsBlock","StyledButton","Button","DropdownComponent","item1","item2","nation","nationHandler","useState","chooseText","setChooseText","hidden","setHidden","HideItems","useEffect","dropdownToggle","onClick","toggle","fullWidth","value","Container","ConditionWrapper","ButtonBlock","SearchForm","NationButton","button","DateInput","input","SearchButton","Conditions","date","dateHandler","SearchExcute","enterKey","window","event","keyCode","type","placeholder","onChange","onKeyPress","style","textAlign","width","GlobalStyles","createGlobalStyle","LoaderWrapper","MainWrapper","section","App","loading","setLoading","setError","movies","setMovies","setDate","setNation","getMovies","DATE","a","axios","get","dailyBoxOfficeList","data","boxOfficeResult","TitleAndDates","map","movie","name","movieNm","console","log","DateHandler","useCallback","e","inputDate","target","length","parseInt","alert","NationHandler","attributes","movieCd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRASeA,EATC,CACZC,WAAa,UACbC,YAAc,UACdC,aAAc,UACdC,gBAAiB,UACjBC,aAAc,UACdC,aAAc,W,OCFZC,EAAgBC,UAAOC,IAAV,6LAODT,EAAO,cAGnBU,EAAiBF,UAAOG,KAAV,mIAGPX,EAAO,aAeLY,EAVA,WACX,OACI,cAACL,EAAD,UACI,cAACG,EAAD,0GCrBNG,EAAgBL,UAAOC,IAAV,qPASDT,EAAO,iBAGnBc,EAAiBN,UAAOC,IAAV,yNAKPT,EAAO,YAQde,EAAcP,kBAAOM,EAAPN,CAAH,0BACXQ,EAAiBR,kBAAOM,EAAPN,CAAH,0DAIdS,EAAgBT,UAAOC,IAAV,8CAIbS,EAAYV,UAAOW,EAAV,uEA+BAC,EAxBA,WACX,OACI,eAACP,EAAD,WACI,eAACE,EAAD,WACI,cAACE,EAAD,UACI,cAACC,EAAD,6CAIJ,cAACD,EAAD,UACI,cAACC,EAAD,sCAKR,cAACF,EAAD,UACI,eAACE,EAAD,+BACqB,qECvD/BG,G,MAAab,UAAOC,IAAV,wsCAIET,EAAO,aAgBJA,EAAO,YASQA,EAAO,iBAYzB,SAAAsB,GAAK,MAA4B,QAAxBA,EAAMC,cACb,CAACC,MAAOxB,EAAO,cACf,CAACwB,MAAOxB,EAAO,kBAsDpByB,EArCD,SAAC,GAAoD,EAAnDC,GAAoD,IAAjDC,EAAgD,EAAhDA,MAAMC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,KAAMN,EAA4B,EAA5BA,cAAeO,EAAa,EAAbA,QAKlD,OADAA,EAAUA,EAAQC,WAAWC,QAAQ,wBAAyB,KAE1D,eAACX,EAAD,CAAYE,cAAeA,EAA3B,UACI,sBAAKU,UAAU,aAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,uBAAd,SACsB,QAAjBV,EAAwB,MAAQ,WAGzC,oBAAIU,UAAU,eAAd,SAA8BN,OAElC,sBAAKM,UAAU,cAAf,UACI,oBAAIA,UAAU,kBAAd,SACiB,SAAXL,GAAgC,MAAXA,EAArB,+BAA+CA,GAA/C,iCAEN,qBAAIK,UAAU,UAAd,iDAAoCH,EAApC,mB,eChFVI,EAAiB1B,UAAOC,IAAV,kDAId0B,EAAe3B,kBAAO4B,SAAP5B,CAAH,iDAkDH6B,GA9CW,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,cAAmB,EAC7BC,mBAAS,qFADoB,mBAC1DC,EAD0D,KAC9CC,EAD8C,OAErCF,oBAAS,GAF4B,mBAE1DG,EAF0D,KAElDC,EAFkD,KAK3DC,EAAY,WACdD,GAAWD,IAYX,OATJG,qBAAU,WAEFJ,EADW,MAAXJ,EACcF,EACE,MAAXE,EACSD,EAEAI,KACnB,CAACH,IAGA,eAAC,WAAD,WACI,cAACL,EAAD,CAAcc,gBAAc,EAACC,QAAS,kBAAKJ,GAAWD,IAAtD,SACKF,IAEL,eAAC,eAAD,CAAcE,OAAQA,EAAQM,OAAQ,kBAAKL,GAAWD,IAASO,WAAS,EAAxE,UACI,cAAClB,EAAD,CAAgBgB,QAASH,EAAzB,SACI,cAAC,eAAD,CACIM,MAAM,IACNH,QAAST,EAFb,SAISH,MAGb,cAAC,kBAAD,IACA,cAACJ,EAAD,CAAgBgB,QAASH,EAAzB,SACI,cAAC,eAAD,CACIM,MAAM,IACNH,QAAST,EAFb,SAISF,aChDvBe,GAAY9C,UAAOC,IAAV,yMAOGT,EAAO,iBAGnBuD,GAAmB/C,UAAOC,IAAV,iJAMhB+C,GAAchD,UAAOC,IAAV,wGAKXgD,GAAajD,UAAOC,IAAV,yJAOViD,GAAelD,UAAOmD,OAAV,ubA2BZC,GAAYpD,UAAOqD,MAAV,mMAWTC,GAAetD,UAAOmD,OAAV,kSAQI3D,EAAO,YAIPA,EAAO,YA8Cd+D,GAnCI,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,KAAMxB,EAAsD,EAAtDA,OAAQyB,EAA8C,EAA9CA,YAAaxB,EAAiC,EAAjCA,cAAeyB,EAAkB,EAAlBA,aAErDC,EAAW,WACb,OAAgC,KAAzBC,OAAOC,MAAMC,SAAgBJ,KAGxC,OACI,cAACZ,GAAD,UACI,eAACC,GAAD,WACI,eAACC,GAAD,WACI,cAACE,GAAD,CAAcL,MAAM,IAAIH,QAAST,EAAjC,sCACA,cAACiB,GAAD,CAAcL,MAAM,IAAIH,QAAST,EAAjC,yCAEJ,cAAC,GAAD,CAAmBH,MAAM,2BAAOC,MAAM,2BAAOC,OAAQA,EAAQC,cAAeA,IAC5E,eAACgB,GAAD,WACI,cAACG,GAAD,CACIW,KAAK,OACLC,YAAY,0DACZnB,MAAOW,EACPS,SAAUR,EACVS,WAAYP,IAEhB,cAACL,GAAD,CACIZ,QAASgB,EACTQ,WAAYP,EAFhB,6BAOJ,oBAAIQ,MAAO,CAACC,UAAU,OAAQC,MAAO,QAArC,mFC/FDC,GAzBMC,4BAAH,mTAKA/E,EAAO,gBACZA,EAAO,YCEdgF,GAAgBxE,UAAOC,IAAV,kHAObwE,GAAczE,UAAO0E,QAAV,iHACWlF,EAAO,gBACJA,EAAO,iBAiIvBmF,GA7HH,WAAO,IAAD,EAEczC,oBAAS,GAFvB,mBAET0C,EAFS,KAEAC,EAFA,OAGU3C,oBAAS,GAHnB,mBAGF4C,GAHE,aAIY5C,mBAAS,MAJrB,mBAIT6C,EAJS,KAIDC,EAJC,OAKQ9C,mBAAS,IALjB,mBAKTsB,EALS,KAKHyB,EALG,OAMY/C,mBAAS,MANrB,mBAMTF,EANS,KAMDkD,EANC,OAOchD,mBAAS,IAPvB,gCAQUA,mBAAS,OARnB,mBAYViD,GAZU,UAYD,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAGdL,EAAU,MACVH,GAAW,GAJG,SASJS,IAAMC,IAAN,oJAAuJH,EAAvJ,wBAA2KpD,IATvK,gBAOQwD,EAPR,EAMZC,KACEC,gBAAkBF,mBAGtBR,EAAUQ,GAIJG,EAAgBH,EAAmBI,KAAI,SAAAC,GAAK,MAAK,CAACC,KAAMD,EAAME,QAASvC,KAAMqC,EAAMzE,WAIzF4E,QAAQC,IAAR,yBAA8BN,IAlBhB,kDAoBdb,GAAS,GACTkB,QAAQC,IAAI,6BAAZ,MArBc,QAwBhBpB,GAAW,GAxBK,0DAAH,uDA2BfrC,qBAAU,cAGP,IAcH,IAAM0D,EAAcC,uBAAY,SAAAC,GAC5B,IAAIC,EAEiB,KADrBA,EAAYD,EAAEE,OAAOzD,OACX0D,QAAiBC,SAASH,IAA4B,KAAdA,EAChDpB,EAAQmB,EAAEE,OAAOzD,OAAO4D,MAAM,gFAAsBxB,EAAQ,MAC/D,IAEGvB,EAAeyC,uBAAY,SAACC,GACZ,IAAhB5C,EAAK+C,QAA2B,OAAXvE,EACvBmD,EAAU3B,GACa,IAAhBA,EAAK+C,QAA2B,OAAXvE,EAC5ByE,MAAM,qFAENA,MAAM,iFACP,CAACjD,EAAKxB,IAGH0E,EAAgBP,uBAAY,SAAAC,GAAM,IACDvD,EAAYuD,EAA1CE,OAASK,WAAa9D,MAAQA,MAErC,OAD4BqC,EAAL,MAAVrC,EAAyB,IAAiB,OAEtD,IAGH,OACE,sBAAKpB,UAAU,YAAf,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,CACI+B,KAAMA,EACNxB,OAAQA,EACRyB,YAAayC,EACbjE,cAAeyE,EACfhD,aAAcA,IAElB,cAACe,GAAD,UACGM,EACI,qBAAKtD,UAAU,SAAf,SACEsD,EAAOa,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,CAAO1E,MAAO0E,EAAME,QACd7E,GAAI2E,EAAMe,QAEVxF,OAAQyE,EAAMzE,OACdC,KAAMwE,EAAMxE,KACZN,cAAe8E,EAAM9E,cACrBO,QAASuE,EAAMvE,SAJVuE,EAAMe,cAQrBhC,EAEI,cAACJ,GAAD,yEAIA,cAACA,GAAD,sFASV,cAAC,EAAD,QCpISqC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee1abcd0.chunk.js","sourcesContent":["const palette = {\r\n    basicColor : '#eee6e3',\r\n    strongColor : '#f5b151',\r\n    wrapperColor :'#3c3f44',\r\n    backgroundColor: '#1F2124',\r\n    NewRankColor: '#F68657',\r\n    OldRankColor: '#c1c4bd'\r\n}\r\n\r\nexport default palette;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../lib/palette';\r\n\r\nconst HeaderWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n        margin: 0;\r\n        padding: 1rem 0;\r\n    background: ${palette[\"wrapperColor\"]};\r\n`\r\n\r\nconst HeaderContents = styled.span`\r\n    font-size: 2rem;\r\n    font-family: 'Yeon Sung', cursive;\r\n    color: ${palette[\"strongColor\"]};\r\n    text-align: center;\r\n`\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderWrapper>\r\n            <HeaderContents>\r\n                박스오피스 영화 순위 정보 사이트\r\n            </HeaderContents>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../lib/palette';\r\n\r\nconst FooterWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 1rem 23rem;\r\n    background: ${palette[\"backgroundColor\"]};\r\n`\r\n\r\nconst FooterContents = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    font-size: 1rem;\r\n    color: ${palette[\"basicColor\"]};\r\n    text-align: center;\r\n\r\n    & + & {\r\n        margin-top: 0.5rem;\r\n    }\r\n`\r\n\r\nconst ContentsTop = styled(FooterContents)``;\r\nconst ContentsBottom = styled(FooterContents)`\r\n    justify-content: center;\r\n`;\r\n\r\nconst ContentsBlock = styled.div`\r\n    width: auto;\r\n`\r\n\r\nconst TextBlock = styled.p`\r\n    text-align: center;\r\n    margin: 0;\r\n\r\n`\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <ContentsTop>\r\n                <ContentsBlock>\r\n                    <TextBlock>\r\n                        e-mail: dlwlsdn201@naver.com \r\n                    </TextBlock>\r\n                </ContentsBlock>\r\n                <ContentsBlock>\r\n                    <TextBlock>\r\n                        Tel. 010-5159-7230\r\n                    </TextBlock>\r\n                </ContentsBlock>\r\n            </ContentsTop>\r\n            <ContentsBottom>\r\n                <TextBlock>\r\n                    Data Resource by <strong>http://www.kobis.or.kr</strong>\r\n                </TextBlock>\r\n            </ContentsBottom>\r\n        </FooterWrapper>\r\n    );\r\n};\r\n\r\nexport default Footer;","//노마드코더 rendering Movies 영상\r\nimport React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport palette from '../lib/palette';\r\nimport cn from 'classnames';\r\n\r\nconst MovieBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 3rem 3rem;\r\n    background: ${palette['wrapperColor']};\r\n    & + & {\r\n        margin-top: 0.5rem;\r\n    }\r\n\r\n    .side__left {\r\n        flex: 1;\r\n        display: inherit;\r\n        align-items: center;\r\n        \r\n        .movie__title {\r\n            flex: 1;\r\n            width: 5rem;\r\n            font-size: 2.6rem;\r\n            font-family: 'Yeon Sung', cursive;\r\n            font-weight: 500;\r\n            color: ${palette['strongColor']};\r\n        }\r\n\r\n        .movie__rank-block {\r\n            display: flex;\r\n            flex: 0.3;\r\n\r\n            .movie__rank{\r\n                font-size: 3rem;\r\n                border: 1px solid ${palette['backgroundColor']};\r\n                border-radius: 50%;\r\n                padding: 1rem;\r\n                width: 1.5em;\r\n                text-align: center;\r\n            }\r\n\r\n\r\n            .movie__rankOldAndNew{\r\n                align-self: flex-start;\r\n                margin: 0;\r\n                font-weight: 500;\r\n                ${props => props.rankOldAndNew === 'NEW'? \r\n                    {color: palette['NewRankColor']}: \r\n                    {color: palette['OldRankColor']}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .side__right {\r\n        flex: 0.5;\r\n        display: inherit;\r\n        flex-flow: column wrap;\r\n        justify-content: space-around;\r\n        align-items: flex-end;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Movie = ({id,title,openDt, rank, rankOldAndNew, audiAcc}) => {\r\n\r\n    \r\n    // console.log(rankOldAndNew === 'NEW');\r\n    audiAcc = audiAcc.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); //천 단위 (,) 붙이는 코드\r\n    return (\r\n        <MovieBlock rankOldAndNew={rankOldAndNew}>\r\n            <div className=\"side__left\">\r\n                <div className=\"movie__rank-block\">\r\n                    <h5 className=\"movie__rank\">{rank}</h5>\r\n                    <h4 className='movie__rankOldAndNew'>\r\n                        {rankOldAndNew ===\"NEW\"? 'new' : 'old'}\r\n                    </h4>\r\n                </div>\r\n                <h2 className=\"movie__title\">{title}</h2>\r\n            </div>\r\n            <div className=\"side__right\">\r\n                <h3 className=\"movie__openDate\">\r\n                    {(openDt !== 'null' && openDt !== ' ' ? `개봉일 : ${openDt}` : `개봉일 : no data`)}\r\n                </h3>\r\n                <h5 className=\"audiAcc\">관객 수(누적) : {audiAcc}명</h5>\r\n            </div>\r\n        </MovieBlock>\r\n            \r\n\r\n    )\r\n};\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.string.isRequired,  // id = movieCd\r\n    title : PropTypes.string.isRequired, //title = movieNm\r\n    openDt : PropTypes.string.isRequired,\r\n    rank: PropTypes.string.isRequired,\r\n    rankOldAndNew: PropTypes.string.isRequired,\r\n    audiAcc: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Movie;","import React, {useState, useEffect, useContext} from 'react';\r\nimport {Button} from 'styled-button-component';\r\nimport {Dropdown, DropdownItem, DropdownMenu, DropdownDivider} from 'styled-dropdown-component';\r\nimport styled from 'styled-components';\r\nimport palette from '../lib/palette';\r\n\r\n//목록 감추기용 div\r\nconst HideItemsBlock = styled.div`\r\n    cursor: pointer;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    width: 17.5rem;\r\n`\r\n\r\nconst DropdownComponent = ({item1, item2, nation, nationHandler}) => {\r\n    const [chooseText, setChooseText] = useState('검색하실 국가를 선택해주세요.');\r\n    const [hidden, setHidden] = useState(true);\r\n    \r\n\r\n    const HideItems = () => {\r\n        setHidden(!hidden);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (nation === 'K')\r\n            setChooseText(item1);\r\n        else if (nation === 'F')\r\n            setChooseText(item2);\r\n        else\r\n            setChooseText(chooseText);\r\n    }, [nation]);\r\n\r\n        return (\r\n        <Dropdown>\r\n            <StyledButton dropdownToggle onClick={()=> setHidden(!hidden)}>\r\n                {chooseText}\r\n            </StyledButton>\r\n            <DropdownMenu hidden={hidden} toggle={()=> setHidden(!hidden)} fullWidth>\r\n                <HideItemsBlock onClick={HideItems}>\r\n                    <DropdownItem \r\n                        value=\"K\" \r\n                        onClick={nationHandler}\r\n                        >\r\n                            {item1}\r\n                    </DropdownItem>\r\n                </HideItemsBlock>\r\n                <DropdownDivider/>\r\n                <HideItemsBlock onClick={HideItems}>\r\n                    <DropdownItem \r\n                        value=\"F\" \r\n                        onClick={nationHandler}\r\n                    >\r\n                            {item2}\r\n                    </DropdownItem>\r\n                </HideItemsBlock>\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n} \r\n\r\nexport default DropdownComponent;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../lib/palette';\r\nimport DropdownComponent from './DropdownComponent';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1.5rem 5rem;\r\n    background: ${palette[\"backgroundColor\"]};\r\n\r\n`\r\nconst ConditionWrapper = styled.div`\r\n    display: inherit;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\nconst ButtonBlock = styled.div`\r\n    display: flex;\r\n    display: none;\r\n    justify-content: space-around;\r\n`\r\nconst SearchForm = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n`\r\nconst NationButton = styled.button`\r\n    outline: none;\r\n    border: none;\r\n    width: 6em;\r\n    flex: 0.7;   \r\n    margin-right: 0.5em;\r\n    padding: 0.5rem 0;\r\n    border-radius: 20px;\r\n\r\n    &:hover{\r\n        background: #adacac;\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        background: #7e7d7d;\r\n        color: white;\r\n    }\r\n\r\n    &:focus{\r\n        background: #adacac;\r\n    }\r\n\r\n    & + & {\r\n        margin-left: 0.5em;\r\n    }\r\n`\r\nconst DateInput = styled.input`\r\n    width: 13rem;\r\n    font-size: 1.2rem;\r\n    margin: 0;\r\n    margin-right: 0.3rem;\r\n    padding: 0.11rem 0;\r\n\r\n    &::placeholder{\r\n        font-size: 1rem;\r\n    }\r\n`\r\nconst SearchButton = styled.button`\r\n    border-radius: 0;\r\n    font-size: 0.96rem;\r\n    width: 4rem;\r\n    padding: 0.25rem 0;\r\n    cursor: pointer;\r\n\r\n    &:hover { \r\n        background: ${palette['strongColor']};\r\n    }\r\n\r\n    &:active{\r\n        background: ${palette['basicColor']};\r\n    }\r\n\r\n    &:focus {\r\n        outline:auto;\r\n    }\r\n\r\n`\r\n\r\n\r\n\r\nconst Conditions = ({date, nation, dateHandler, nationHandler, SearchExcute}) => {\r\n\r\n    const enterKey = () => {\r\n        return window.event.keyCode === 13? SearchExcute() : false;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ConditionWrapper>\r\n                <ButtonBlock>\r\n                    <NationButton value=\"K\" onClick={nationHandler}>국내영화</NationButton>\r\n                    <NationButton value=\"F\" onClick={nationHandler}>해외영화</NationButton>\r\n                </ButtonBlock>\r\n                <DropdownComponent item1=\"국내영화\" item2=\"해외영화\" nation={nation} nationHandler={nationHandler}/>\r\n                <SearchForm>\r\n                    <DateInput\r\n                        type=\"text\" \r\n                        placeholder=\"조회 날짜 입력 예) 20210214\"\r\n                        value={date}\r\n                        onChange={dateHandler}\r\n                        onKeyPress={enterKey}>\r\n                    </DateInput>\r\n                    <SearchButton \r\n                        onClick={SearchExcute}\r\n                        onKeyPress={enterKey} \r\n                    >\r\n                        검색\r\n                    </SearchButton>\r\n                </SearchForm>\r\n                <h5 style={{textAlign:\"left\", width: \"100%\"}}>검색 가능 연도: 2004년 ~ 2021년</h5>\r\n            </ConditionWrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Conditions;","import styled, {createGlobalStyle} from 'styled-components';\r\nimport palette from './lib/palette';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\nhtml, body {\r\n    margin: 0;\r\n    padding: 0;\r\n    background: ${palette['backgroundColor']};\r\n    color: ${palette['basicColor']};\r\n    \r\n    ::-webkit-scrollbar { display: none};\r\n}\r\n\r\n\r\nbutton {\r\n    outline: 0;\r\n    border: 0;\r\n}\r\n\r\n\r\nh1,h2,h3,h4,h5,h6,ul {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nli {list-style: none;}\r\n`\r\nexport default GlobalStyles;","import React,{useState, useEffect, useCallback} from 'react';\nimport axios from 'axios';\nimport Header from './common/Header';\nimport Footer from './common/Footer';\nimport Movie from './components/Movie';\nimport Conditions from './components/Conditions';\nimport GlobalStyles from './GlobalStyles';\nimport styled from 'styled-components';\nimport palette from './lib/palette';\n\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 3rem auto;\n  height: 10rem;\n`\n\nconst MainWrapper = styled.section`\n    border-top: 1px solid ${palette['fontStrongColor']};\n    border-bottom: 1px solid ${palette['fontStrongColor']};\n    height: auto;\n`\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState(null);\n  const [date, setDate] = useState('');\n  const [nation, setNation] = useState(null);\n  const [posters, setPosters] = useState([]);\n  const [names, setNames] = useState(null);\n\n\n\n  const getMovies = async (DATE) => {\n    \n    try {\n      setMovies(null);\n      setLoading(true);\n      const {\n        data: {\n          boxOfficeResult: {dailyBoxOfficeList}\n        }\n      } = await axios.get(`http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=4010de0e4173634fe5b671b20aea7c21&targetDt=${DATE}&repNationCd=${nation}`);\n      setMovies(dailyBoxOfficeList);\n\n      // dailyBoxOfficeList = [{rnum:'', rank:'', rankOldAndNew:'', movieNm: '원더우먼'}]\n      // titles = ['원더우먼', '화양연화','조제','소울','도굴', ...]\n      const TitleAndDates = dailyBoxOfficeList.map(movie => ({name: movie.movieNm, date: movie.openDt}))\n\n\n      // GetPosterImg();\n      console.log(`TitleAndDates: ${TitleAndDates}`);\n    }catch(e){\n      setError(true);\n      console.log('에러 원인:',e);\n    }\n\n    setLoading(false);\n  };\n  \n  useEffect(()=> {\n    // if(date)\n    //   getMovies();\n  }, []);\n\n\n  // const GetPosterImg = async() => {\n\n  //   // 개봉일 날짜를 8자리 수로 변환하는 코드 필요\n  //   // 검색 조건 : 제목, 개봉일\n\n  //   const USER_KEY = '9J3U3PF6Q9127H323N04';\n  //     const image = await axios.get(`http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_json2.jsp?collection=kmdb_new2&detail=N&title=7광구&ServiceKey=${USER_KEY}`)\n  //     // console.log('image.data.Data[0].Result[1].rating:',image.data.Data[0].Result[1].posterUrl);\n  //     console.log(image);\n  // }\n\n  const DateHandler = useCallback(e => {\n      let inputDate ='';\n      inputDate = e.target.value;\n      inputDate.length === 8 || (parseInt(inputDate) || inputDate === '') ?\n        setDate(e.target.value):alert('숫자 형식으로 입력해주세요!') && setDate('')\n  }, []);\n\n  const SearchExcute = useCallback((e) => {\n    if (date.length === 8 && nation !== null) \n      getMovies(date)\n    else if (date.length !== 8 && nation !== null) \n      alert('입력하신 날짜를 확인해주세요.')\n    else\n      alert('검색할 국가를 선택해주세요.')\n  }, [date,nation])\n\n  \n  const NationHandler = useCallback(e => {\n    const {target: {attributes: {value: {value}}}} = e;\n    let Nation = value === 'K'? setNation('K') : setNation('F');\n    return Nation;\n  }, []);\n\n\n  return (\n    <div className='container'>\n      <GlobalStyles/>\n      <Header/>\n      <Conditions \n          date={date} \n          nation={nation} \n          dateHandler={DateHandler} \n          nationHandler={NationHandler} \n          SearchExcute={SearchExcute} \n      />\n      <MainWrapper>\n        {movies?\n            (<div className=\"movies\">\n              {movies.map(movie=> (\n                <Movie title={movie.movieNm} \n                      id={movie.movieCd}\n                      key={movie.movieCd} \n                      openDt={movie.openDt}  \n                      rank={movie.rank}  \n                      rankOldAndNew={movie.rankOldAndNew}  \n                      audiAcc={movie.audiAcc}\n                />\n              ))}\n            </div>):\n            loading? \n              (\n                <LoaderWrapper>\n                  데이터를 불러오는 중..\n                </LoaderWrapper>) :\n              (\n                <LoaderWrapper>\n                  검색 조건을 설정해주세요.\n                </LoaderWrapper>\n              )\n        }\n        \n      </MainWrapper>\n\n\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}